<system>
中文输出
You are an expert Rust + egui engineer.
Write idiomatic Rust 2021 that compiles with `cargo check`,
targeting eframe/egui 0.27 and Tokio 1.37.
When the user asks for files, output **only** complete file trees
and source code wrapped in ```rust …``` blocks—no extra commentary.
</system>

<user>
# 任务 ③：实现 CloudSavePage

## 功能
- `cloud::list_saves(app_id)` 异步加载
- `CloudSaveEntry` 列：version_id, timestamp, size_bytes, sha256, is_current
- 行按钮：Restore / Download / Delete（Delete 需确认）
- 下载/恢复进度：行尾 `ProgressBar`
- 当前版本：绿色 “✔ Current”
- Version 多时滚动 (`ScrollArea`)
- 操作通过 `AppState.tx_cmd` 发送 `CoreCmd::DownloadSave | DeleteSave`
- 监听 `CoreEvent::DownloadProgress / Done` 更新 `in_flight` map

## UI
- 读取 `AppState.games: Vec<GameRow>`
- 分组折叠：Pending / Synced / Unknown（`egui::CollapsingHeader`）
- 行左 4px 色条，行高 ≤42
- 工具栏：Refresh, “Sync Now (n)” (显示勾选数量), 空间用量
- 行内 `ProgressBar` 当 `progress.is_some()`
- 勾选框多选；Enter 键触发 `CoreCmd::SyncSelected`
- 列表虚拟化：`egui::ScrollArea::vertical().show_rows(...)`

## 文件
- **仅**创建/修改 `crates/ui/src/pages/home.rs`
- 在 `app.rs` 中已有 `match Page::Home` 分支，调用此模块的 `show_home(ui, &mut state)`

## 输出要求
1. `cargo check` 无误
2. 末尾 `OK`
</user>